services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=dev@ragofjoes.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    networks:
      - proxy
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=puzzlely
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    networks:
      - internal
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    image: ghcr.io/RagOfJoes/puzzlely-api:${GIT_COMMIT_HASH:-latest}
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api-v2.puzzlely.io`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.web.loadbalancer.server.port=8080"
    networks:
      - proxy
      - internal
    restart: always
  web:
    image: ghcr.io/RagOfJoes/puzzlely-web:${GIT_COMMIT_HASH:-latest}
    depends_on:
      - api
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`beta.puzzlely.io`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.web.loadbalancer.server.port=5173"
    networks:
      - proxy
      - internal
    restart: unless-stopped
networks:
  internal:
  proxy:
secrets:
  db-password:
    file: db/password.txt
volumes:
  db:
  letsencrypt:
